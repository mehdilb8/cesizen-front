name: Deploy Application

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment || 'staging' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Deploy to environment
        run: |
          echo "Deploying to ${{ github.event.inputs.environment || 'staging' }} environment..."
          
          # Exemple de d√©ploiement avec docker-compose
          if [ "${{ github.event.inputs.environment || 'staging' }}" = "production" ]; then
            echo "üöÄ Deploying to PRODUCTION"
            # docker-compose -f docker-compose.prod.yml up -d
          else
            echo "üîß Deploying to STAGING"
            # docker-compose -f docker-compose.staging.yml up -d
          fi
          
      - name: Health check
        run: |
          echo "Performing health check..."
          # Attendre que l'application soit pr√™te
          sleep 30
          
          # V√©rifier que l'application r√©pond
          # curl -f http://localhost:3000/health || exit 1
          
      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "‚úÖ Deployment to ${{ github.event.inputs.environment || 'staging' }} successful!"
          else
            echo "‚ùå Deployment to ${{ github.event.inputs.environment || 'staging' }} failed!"
          fi
